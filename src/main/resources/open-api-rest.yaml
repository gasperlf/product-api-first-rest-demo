openapi: 3.0.3
info:
  title: Product-API
  description: Product-API
  version: 1.0.0
  contact:
    name: Lewis Florez
    email: gasper_lf@hotmail.com
servers:
  - url: https://localhost:8080/api/
    description: DEV
  - url: https://localhost:8088/api/
    description: UAT
tags:
  - name: Products
    description: Product endpoint operations
paths:
  /products:
    post:
      tags:
        - Products
      summary: create product
      operationId: createProduct
      description: Create a new product in the system
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CreateProductRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateProductResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    get:
      tags:
        - Products
      summary: Get products filter by
      operationId: getProducts
      description: Get products from the system filter by
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/pageQuery'
        - $ref: '#/components/parameters/sizeQuery'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc).'
          required: false
          schema:
           type: array
           items:
              type: string
              example: "name,asc"
      responses:
        '200':
          $ref: '#/components/responses/GetProductsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /products/{productId}:
    get:
      tags:
        - Products
      summary: Get product by identifier
      operationId: getProductById
      description: Get product from the system by identifier
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/productIdPath'
      responses:
        '200':
          $ref: '#/components/responses/CreateProductResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
components:
  parameters:
    productIdPath:
      name: productId
      in: path
      description: product identifier
      required: true
      schema:
        type: integer
        format: int32
        example: 5
    pageQuery:
      name: page
      in: query
      description: page index (0...N)
      schema:
        type: integer
        format: int32
        example: 0
        default: 00
    sizeQuery:
      name: size
      in: query
      description: Page size
      schema:
        type: integer
        format: int32
        example: 20
        default: 20
  requestBodies:
    CreateProductRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductRequest'
  responses:
    NoContent:
      description: No Content
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
    CreateProductResponse:
      description: Created product
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductResponse'
    GetProductsResponse:
      description: Get list of products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductPageResponse'
  schemas:
    ProblemDetail:
      title: ProblemDetail
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
        properties:
          type: object
          additionalProperties:
            type: string
    ProductRequest:
      title: ProductRequest
      type: object
      required:
        - price
      properties:
        name:
          type: string
          description: product name
          example: 'MacBook PRO 14'
        price:
          type: number
          example: 10.99
          x-field-extra-annotation: "@net.ontopsolutions.annotation.Price(message = \"This is a custom message\")"
    ProductResponse:
      title: ProductResponse
      type: object
      properties:
        id:
          type: integer
          description: product identifier
          example: 1
        name:
          type: string
          description: product name
          example: 'MacBook PRO 14'
    ProductPageResponse:
      title: ProductPageResponse
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductResponse'
        totalElements:
          type: integer
          format: int64
          description: Total elements in the content
          example: 5
        totalPages:
          type: integer
          format: int32
          description: Total pages
          example: 10
        pageSize:
          type: integer
          description: Size elements
          example: 20
        currentPage:
          type: integer
          description: Current page
          example: 0
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      in: header
      scheme: bearer
      bearerFormat: JWT